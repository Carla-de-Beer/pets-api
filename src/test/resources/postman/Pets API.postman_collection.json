{
	"info": {
		"_postman_id": "feecf428-9486-45c5-b115-451cf2093f97",
		"name": "Pets API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Actuator data",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:9001/api/v1/pets/actuator/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9001",
					"path": [
						"api",
						"v1",
						"pets",
						"actuator",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all pets",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1fa707f3-60e4-45e4-adaf-3be2ea8af2d4",
						"exec": [
							"postman.setGlobalVariable(\"firstPetId\", pm.response.json()[0].id);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type header is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Check if target is an object\", function () { ",
							"    pm.expect({a: 1}).to.be.an('object');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/api/v1/pets/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"pets",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get pet by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4104fd35-8c62-49ab-be9f-088d04b3e62f",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type header is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Check if target is an object\", function () { ",
							"    pm.expect({a: 1}).to.be.an('object');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/api/v1/pets/{{firstPetId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"pets",
						"{{firstPetId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get pet list by name",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6cccb289-e877-4aa7-b79d-b26d293f90ec",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type header is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Check if target is an object\", function () { ",
							"    pm.expect({a: 1}).to.be.an('object');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/api/v1/pets/name/Spot",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"pets",
						"name",
						"Spot"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get pet list by species",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "80704738-f1a7-4b30-a6d3-c00fb16582ad",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type header is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Check if target is an object\", function () { ",
							"    pm.expect({a: 1}).to.be.an('object');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/api/v1/pets/species/dog",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"pets",
						"species",
						"dog"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get pet list by species (case insensitive)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "80704738-f1a7-4b30-a6d3-c00fb16582ad",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type header is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Check if target is an object\", function () { ",
							"    pm.expect({a: 1}).to.be.an('object');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/api/v1/pets/species/DoG",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"pets",
						"species",
						"DoG"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get pet list by breed",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "80393d66-2ea9-4121-826a-ea19e1a3514a",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type header is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Check if target is an object\", function () { ",
							"    pm.expect({a: 1}).to.be.an('object');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/api/v1/pets/breed/dalmation",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"pets",
						"breed",
						"dalmation"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get pet list by breed (case insensitive)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "80393d66-2ea9-4121-826a-ea19e1a3514a",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type header is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Check if target is an object\", function () { ",
							"    pm.expect({a: 1}).to.be.an('object');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/api/v1/pets/breed/DalMAtioN",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"pets",
						"breed",
						"DalMAtioN"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get pet by ID (invalid)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e4a3dd06-4793-477a-ae5e-84574f058760",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Content-Type header is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Check if target is an object\", function () { ",
							"    pm.expect({a: 1}).to.be.an('object');",
							"});",
							"",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Resource not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/api/v1/pets/a1a1a1a1-a1a1-a1a1-a1a1-a1a1a1a1a1a",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"pets",
						"a1a1a1a1-a1a1-a1a1-a1a1-a1a1a1a1a1a"
					]
				}
			},
			"response": []
		},
		{
			"name": "Save new pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "eb1b0362-1fe6-4946-9e40-6d33602718dc",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Content-Type header is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Check if target is an object\", function () { ",
							"    pm.expect({a: 1}).to.be.an('object');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"name\" : \"Sparky\", \"species\" : \"dog\", \"breed\" : \"terrier\"}"
				},
				"url": {
					"raw": "http://localhost:8080/api/v1/pets/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"pets",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all pets (set new variables)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1fa707f3-60e4-45e4-adaf-3be2ea8af2d4",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type header is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Check if target is an object\", function () { ",
							"    pm.expect({a: 1}).to.be.an('object');",
							"});",
							"",
							"",
							"function findSparky() {",
							"    for (var i = 0; i < pm.response.json().length; ++i) {",
							"      if (pm.response.json()[i].name === \"Sparky\") {",
							"          return pm.response.json()[i].id;",
							"      } ",
							"    }",
							"    return \"\";",
							"}",
							"",
							"postman.setGlobalVariable(\"SparkyId\", findSparky());",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/api/v1/pets/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"pets",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Update existing pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "34d8ea8a-445a-4922-aec7-cde55b4d3ceb",
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							"",
							"pm.test(\"Content-Type header is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Check if target is an object\", function () { ",
							"    pm.expect({a: 1}).to.be.an('object');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"name\" : \"Spot\", \"species\" : \"dog\", \"breed\" : \"terrier\"}"
				},
				"url": {
					"raw": "http://localhost:8080/api/v1/pets/{{firstPetId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"pets",
						"{{firstPetId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update existing pet (undo change)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d5b1dfdd-c188-4029-98af-9191bdebe3bf",
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							"",
							"pm.test(\"Content-Type header is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Check if target is an object\", function () { ",
							"    pm.expect({a: 1}).to.be.an('object');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"name\" : \"Spot\", \"species\" : \"dog\", \"breed\" : \"dalmation\"}"
				},
				"url": {
					"raw": "http://localhost:8080/api/v1/pets/{{firstPetId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"pets",
						"{{firstPetId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update existing pet (invalid) ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "47193d81-1569-406a-83a8-5eb9d7ff6a77",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Content-Type header is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Check if target is an object\", function () { ",
							"    pm.expect({a: 1}).to.be.an('object');",
							"});",
							"",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Resource not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"name\" : \"Sparky\", \"species\" : \"dog\", \"breed\" : \"terrier\"}"
				},
				"url": {
					"raw": "http://localhost:8080/api/v1/pets/a1a1a1a1-a1a1-a1a1-a1a1-a1a1a1a1a1a",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"pets",
						"a1a1a1a1-a1a1-a1a1-a1a1-a1a1a1a1a1a"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete existing pet by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "730ce34d-eb10-45e7-b8be-b64c3968b20c",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Check if target is an object\", function () { ",
							"    pm.expect({a: 1}).to.be.an('object');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/api/v1/pets/{{SparkyId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"pets",
						"{{SparkyId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete existing pet by ID (invalid)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2b315271-0192-48ff-9f15-cfc2cd0e2da4",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Check if target is an object\", function () { ",
							"    pm.expect({a: 1}).to.be.an('object');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/api/v1/pets/a1a1a1a1-a1a1-a1a1-a1a1-a1a1a1a1a1a",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"pets",
						"a1a1a1a1-a1a1-a1a1-a1a1-a1a1a1a1a1a"
					]
				}
			},
			"response": []
		}
	]
}